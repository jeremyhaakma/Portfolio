1. 	* A polynomial is a function through n-dimensional space (defined by the number
		of parameters), with a curvature defined by the degree of the function.
	* The parameters of a polynomial function are the inputs which describe the
		properties of each element of the function. For example, in a linear
		polynomial, the parameters determine the height and angle of the line.
	* An error surface is defined by the error of each data point (that is, the
	difference between the data and the expected value). For n degrees, the error
	surface exists in n+1 dimensional space.
	* Linear regression creates a 'best-fit' line through the data, by creating
		the linear polynomial function that creates the smallest error. By reducing
		the error, it estimates the function described by the data.
		
		
5. (a) breadth-first search:
	
		x = popFromFront();
		x == target? return x;
		for (x.children){
		pushToEnd(child);
		}
		search(x);
	
	depth-first search:
	
		x = popFromFront();
		x == target? return x;
		for (x.children){
		pushToFront(child);
		}
		search(x);
	
	(b) Benefits/drawbacks: 
	Breadth-first is complete (it is guaranteed to find the target
	given enough time and no. children-per-node is finite). It takes
	a long time if the depth is large, but otherwise time is okay. Breadth-
	first also takes up a lot of space. It is only optimal if cost = 1 per step;
	
	Depth-first is not complete, as it gets stuck with infinite loops. This means
	that its time component can be very large. It does not take up as much space as
	breadth first search, and it is optimal. 
	
	(c) Iterative deepening performs depth-first search, but only up to a depth n.
	n starts small, and increases each time the search is performed, until the 
	target is found. This provides the space and completeness qualities of depth-
	first search, with the completeness and timing benefits of breadth-first.
